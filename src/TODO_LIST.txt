// ///////////////////////////
//partie GLOBALE
// ///////////////////////////

#Main:

#Class PathManager:
* ajouter un membre vers le dossier principal de l'appli ?

#Class LogManager:
* rendre gominaMsgHandler() thread safe.
* utiliser qSetMessagePattern("%{category} %{message}"); dans mon messageHandler custom pour formater les lignes de logs
* optimiser les performances ?!
* ajouter d'autres catégories et journaux de logs pour chaque modules de l'appli.
* configurer explicitement pour chaque catégorie de logs, la politique pour chaque type de trace
 |(message, debug, warning, fatal).(I;E; Quel niveau de trace on veut module par module.
*


#Class ConfManager:
* definir l'architecture de synchronisation des données entre la cfg.ini/IHM/


// ///////////////////////////
// partir IHM
// ///////////////////////////


// ///////////////////////////
//partie ENGINE:
// ///////////////////////////
réaliser la modélisation en automate fini du moteur de jeu.
mode de jeu // état de la partie ...


// ///////////////////////////
//partie BRAIN
// ///////////////////////////
Réunir de la Doc sur openCL bordel
Commencer la conception sur papier. Quel découpage en thread faire pour l'IA
